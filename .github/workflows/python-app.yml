name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      FOREX_API_KEY: ${{ secrets.FOREX_API_KEY }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8==5.0.4 pytest==7.2.1 pytest-cov
        pip install pycodestyle==2.12.1 pyflakes==3.2.0 exceptiongroup==1.2.2 iniconfig==2.0.0 packaging==24.2
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Create required directories
      run: |
        mkdir -p data processed_data logs
        
    - name: Setup configuration
      run: |
        cp config/config.json.example config/config.json
        cp .env.example .env
        echo "FOREX_API_KEY=${{ secrets.FOREX_API_KEY }}" >> .env
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        pytest --cov=./ --cov-report=xml
      env:
        FOREX_API_KEY: ${{ secrets.FOREX_API_KEY }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
